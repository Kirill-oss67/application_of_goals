name: CI actions
on: [ push ]
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: clone code
        uses: actions/checkout@v2
      - name: docker build
        run: docker build -t kirill-oss67/application_of_goals:$GITHUB_REF_NAME-$GITHUB_RUN_ID .
      - name: docker hub login
        run: echo ${{ secrets.DOCKER_TOKEN }} | docker login -u ${{ secrets.DOCKER_NAME }} --password-stdin
      - name: docker push
        run: docker push yakovkirilldeveloper/application_of_goals:$GITHUB_REF_NAME-$GITHUB_RUN_ID

#      - name: login
#        run: docker login -u ${{ secrets.DOCKER_NAME }} -p ${{ secrets.DOCKER_TOKEN }}
#      - name: push
#        run: docker push ${{ secrets.DOCKER_NAME }}/application_of_goals:$GITHUB_REF_NAME-$GITHUB_RUN_ID
#  deploy:
#    runs-on: ubuntu-latest
#    needs: build
#    steps:
#      - name: clone code
#        uses: actions/checkout@v2
#      - name: render configs
#        run: |
#          mkdir deploy
#          cat docker-compose-ci.yaml | envsubst > deploy/docker-compose.yaml
#      - name: copy to server
#        uses: appleboy/scp-action@master
#        with:
#          host: ${{ secrets.HOST }}
#          username: ${{ secrets.USERNAME }}
#          password: ${{ secrets.PASSWORD }}
#          source: "deploy/docker-compose.yaml"
#          target: "flask_api_ci"
#          strip_components: 1
#      - name: deploy app
#        uses: appleboy/ssh-action@master
#        with:
#          host: ${{ secrets.HOST }}
#          username: ${{ secrets.USERNAME }}
#          password: ${{ secrets.PASSWORD }}
#          script: |
#            cd flask_api_ci
#            echo ${{ secrets.PASSWORD }} | sudo -S docker-compose up -d





