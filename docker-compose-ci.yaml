version: '3.9'

services:

  front:
    image: sermalenk/skypro-front:lesson-34
    ports:
      - "80:80"
    depends_on:
      - postgres
      - api
    networks:
      - backend_nw


  api:
    image: yakovkirilldeveloper/application_of_goals:$GITHUB_REF_NAME-$GITHUB_RUN_ID
    depends_on:
      postgres:
        condition: service_healthy
      migrations:
        condition: service_completed_successfully
    env_file:
      - ./.env_example
    networks:
      - backend_nw

  migrations:
    image: yakovkirilldeveloper/application_of_goals:$GITHUB_REF_NAME-$GITHUB_RUN_ID
    depends_on:
      postgres:
        condition: service_healthy
    env_file:
      - ./.env_example
    volumes:
      - ./.env_example:/code/.env_example
    networks:
      - backend_nw
    command: python ./manage.py migrate

  postgres:
    image: postgres:13.0-alpine
    restart: always
    env_file:
      - .env_example
    volumes:
      - pg_data_todolist:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres -d postgres" ]
      interval: 5s
      timeout: 3s
      retries: 5
    ports:
      - "5432:5432"
    networks:
      - backend_nw

volumes:
  pg_data_todolist:

networks:
  backend_nw:
    driver: bridge
